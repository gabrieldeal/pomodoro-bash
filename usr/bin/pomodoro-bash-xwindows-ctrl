#!/usr/bin/env sh

command="$1"
[ -n "$2" ] && pomodoro_window_name="$2" || pomodoro_window_name="Pomodoro Bash"

fail() {
    echo "$@" 1>&2
    exit 1
}

assert_command_exists() {
    command -v "$1" >/dev/null 2>&1 || fail "Missing the '$1' command"
}

assert_command_exists "xdotool"
assert_command_exists "wmctrl"

active_window_id="$(xdotool getwindowfocus)"
active_window_position="$(xdotool getwindowgeometry $active_window_id | grep Position | sed 's/.* \([0-9]*\),\([0-9]*\) .*/\1 \2/')"

[ -z "$active_window_position" ] && fail "Unable to get the position of the active window"

pomodoro_window_ids="$(wmctrl -l | grep -w "$pomodoro_window_name" | cut -d' ' -f1)"
[ -z "$pomodoro_window_ids" ] && fail "Unable to get the position of the '$pomodoro_window_name' window"

for pomodoro_window_id in $pomodoro_window_ids
do
    if [ "$command" = "show" ]
    then
	xdotool windowmap "$pomodoro_window_id" \
	    && xdotool windowmove "$pomodoro_window_id" $active_window_position \
	    && xdotool windowraise "$pomodoro_window_id" \
	    && xdotool windowfocus "$pomodoro_window_id"
	[ $? -ne 0 ] && fail "Error moving window ID '$pomodoro_window_id'"
    elif [ "$command" = "hide" ]
    then
	xdotool windowminimize "$pomodoro_window_id"
	[ $? -ne 0 ] && fail "Error minimizing window ID '$pomodoro_window_id'"
    else
	fail "Unrecognized command '$command'"
    fi
done

exit 0
